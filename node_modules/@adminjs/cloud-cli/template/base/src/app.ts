import AdminJS, { ResourceWithOptions } from 'adminjs';
import express from 'express';
import AdminJSExpress from '@adminjs/express';
import { Adapter, Database, Resource } from '@adminjs/sql';
import Connect from 'connect-pg-simple';
import session from 'express-session';

AdminJS.registerAdapter({
  Database,
  Resource,
});

const DEFAULT_ADMIN = {
  email: 'admin@example.com',
  password: 'password',
};

const authenticate = async (email: string, password: string) => {
  if (email === DEFAULT_ADMIN.email && password === DEFAULT_ADMIN.password) {
    return Promise.resolve(DEFAULT_ADMIN);
  }
  return null;
};

const port = 8080;

const start = async () => {
  const app = express();

  const databaseUrl = process.env.POSTGRES_DATABASE_URL;
  const databaseName = databaseUrl.substring(databaseUrl.lastIndexOf('/') + 1);
  const db = await new Adapter('postgresql', {
    connectionString: process.env.POSTGRES_DATABASE_URL,
    database: databaseName,
  }).init();

  const admin = new AdminJS({
    resources: db.tables().map(
      (table) => ({
        resource: table,
        options: {
          navigation: null,
        },
      } as ResourceWithOptions),
    ),
    rootPath: '/',
  });

  if (process.env.NODE_ENV !== 'production') {
    admin.watch();
  }

  const ConnectSession = Connect(session);

  const sessionStore = new ConnectSession({
    conObject: {
      connectionString: process.env.POSTGRES_DATABASE_URL,
      ssl: process.env.REQUIRE_SSL === 'true',
    },
    tableName: 'session',
    createTableIfMissing: true,
  });

  const adminRouter = AdminJSExpress.buildAuthenticatedRouter(
    admin,
    {
      authenticate,
      cookieName: 'adminjs',
      cookiePassword: 'sessionsecret',
    },
    null,
    {
      store: sessionStore,
      resave: true,
      saveUninitialized: true,
      secret: 'sessionsecret',
      cookie: {
        httpOnly: true,
        secure: process.env.NODE_ENV === 'production',
      },
      name: 'adminjs',
    },
  );

  app.use(adminRouter);

  app.listen(8080, () => {
    console.log(`App started at http://localhost:${port}`);
  });
};

start();
