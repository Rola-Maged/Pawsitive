import axios from 'axios';
import FormData from 'form-data';
import chalk from 'chalk';

type DeployData = {
  file: Buffer;
  filePath: string;
  fileName: string;
}

type Credentials = {
  apiKey: string;
  apiSecret: string;
}

type ApiClient = {
  deploy: (data: DeployData) => Promise<void>;
  validate: () => Promise<boolean>;
}

const BASE_URL = 'https://cloud.adminjs.co';

const endpoints = {
  deployments: 'api/v1/deployments',
  validate: 'api/v1/validate',
};

const ApiClient = ({ apiKey, apiSecret }: Credentials): ApiClient => ({
  validate: async () => {
    const data = new FormData();

    const response = await axios.post(`${BASE_URL}/${endpoints.validate}`, data, {
      headers: {
        ...(data.getHeaders() ?? {}),
        'Content-Type': 'form-data',
        'API-Key': apiKey,
        'API-Secret': apiSecret,
      },
    });

    if (response.data?.errors) {
      console.log(chalk.red(response.data.errors));
      return false;
    }
    console.log(chalk.green(response.data));
    return true;
  },
  deploy: async ({ file, filePath, fileName }) => {
    const data = new FormData();
    data.append('file', file, {
      filepath: filePath,
      filename: fileName,
    });

    const response = await axios.post(`${BASE_URL}/${endpoints.deployments}`, data, {
      headers: {
        ...(data.getHeaders() ?? {}),
        'API-Key': apiKey,
        'API-Secret': apiSecret,
      },
    });

    if (response.data?.errors) {
      console.log(chalk.red(response.data.errors));
    } else {
      console.log(chalk.green(response.data));
    }
  },
});

export default ApiClient;
